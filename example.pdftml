dynamics {
	temperature
}

component engine <mtbf, mttr> {
	parameters {
		mtbf = 1000;
		mttr = 10;
	}
	states: up, down;
	outport: failure {true, false};
	transitions {
		up [(temperature > 100) or {exp(mtbf)}] --> down / true;
		down [{exp(mttr)}] --> up / false;
	}
}

component train {
	states: up, failing, down;
	outports: failure {true, false};
	inports {
		input1 {true, false};
		input2 {true, false};
	}
	transitions {
		up [(input1 == true) or (input2 == true)] --> failing;
		failing [(input1 == true) or (input2 == true)] --> down / false;
		down [(input1 == false) and (input2 == false)] --> up / true;
	}
}


model train {
	parameters {
		cost_of_an_engine = 1000;
	}
	engine E1<100,10>;
	engine E2<None,None>;
	train top;
	E1.failure -> top.input1 (1);
	E2.failure -> top.input2 (1);
	
	cost {
		top == up: 0,
		top == failing: cost_of_an_engine,
		top == down: cost_of_an_engine * cost_of_an_engine,
	}	
}

